#include <map>
/********************************************************************
* RootDict.h
* CAUTION: DON'T CHANGE THIS FILE. THIS FILE IS AUTOMATICALLY GENERATED
*          FROM HEADER FILES LISTED IN G__setup_cpp_environmentXXX().
*          CHANGE THOSE HEADER FILES AND REGENERATE THIS FILE.
********************************************************************/
#ifdef __CINT__
#error RootDict.h/C is only for compilation. Abort cint.
#endif
#include <stddef.h>
#include <stdio.h>
#include <stdlib.h>
#include <math.h>
#include <string.h>
#define G__ANSIHEADER
#define G__DICTIONARY
#define G__PRIVATE_GVALUE
#include "G__ci.h"
#include "FastAllocString.h"
extern "C" {
extern void G__cpp_setup_tagtableRootDict();
extern void G__cpp_setup_inheritanceRootDict();
extern void G__cpp_setup_typetableRootDict();
extern void G__cpp_setup_memvarRootDict();
extern void G__cpp_setup_globalRootDict();
extern void G__cpp_setup_memfuncRootDict();
extern void G__cpp_setup_funcRootDict();
extern void G__set_cpp_environmentRootDict();
}


#include "TObject.h"
#include "TMemberInspector.h"
#include <algorithm>
namespace std { }
using namespace std;

#ifndef G__MEMFUNCBODY
#endif

extern G__linked_taginfo G__RootDictLN_string;
extern G__linked_taginfo G__RootDictLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR;
extern G__linked_taginfo G__RootDictLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR;
extern G__linked_taginfo G__RootDictLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR;
extern G__linked_taginfo G__RootDictLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR;
extern G__linked_taginfo G__RootDictLN_lesslEstringgR;
extern G__linked_taginfo G__RootDictLN_pairlEstringcOstringgR;
extern G__linked_taginfo G__RootDictLN_pairlEconstsPstringcOstringgR;
extern G__linked_taginfo G__RootDictLN_allocatorlEpairlEconstsPstringcOstringgRsPgR;
extern G__linked_taginfo G__RootDictLN_maplEstringcOstringcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOstringgRsPgRsPgR;
extern G__linked_taginfo G__RootDictLN_maplEstringcOstringcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOstringgRsPgRsPgRcLcLiterator;
extern G__linked_taginfo G__RootDictLN_maplEstringcOstringcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOstringgRsPgRsPgRcLcLreverse_iterator;
extern G__linked_taginfo G__RootDictLN_pairlEmaplEstringcOstringcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOstringgRsPgRsPgRcLcLiteratorcOboolgR;

/* STUB derived class for protected member access */
typedef pair<string,string> G__pairlEstringcOstringgR;
typedef pair<const string,string> G__pairlEconstsPstringcOstringgR;
typedef allocator<pair<const string,string> > G__allocatorlEpairlEconstsPstringcOstringgRsPgR;
typedef map<string,string,less<string>,allocator<pair<const string,string> > > G__maplEstringcOstringcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOstringgRsPgRsPgR;
typedef map<string,string,less<string>,allocator<pair<const string,string> > >::iterator G__maplEstringcOstringcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOstringgRsPgRsPgRcLcLiterator;
typedef map<string,string,less<string>,allocator<pair<const string,string> > >::reverse_iterator G__maplEstringcOstringcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOstringgRsPgRsPgRcLcLreverse_iterator;
